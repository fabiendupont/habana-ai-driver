---
name: Build Habana AI Driver container images

on:
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.gen-matrix.outputs.matrix }}
    steps:
      - name: Checkout current repository to get the matrix file
        uses: actions/checkout@v3

      - name: Generate the build matrix
        id: gen-matrix
        run: |
          #echo "${PULL_SECRET}" > ${PULL_SECRET_FILE}
          #${GITHUB_WORKSPACE}/build-matrix.sh
          matrix=$(cat ${GITHUB_WORKSPACE}/build-matrix.json)
          echo "::set-output name=matrix::${matrix}"
        env:
          PULL_SECRET: ${{ secrets.PULL_SECRET }}
          PULL_SECRET_FILE: pull-secret

  build-image:
    needs: build-matrix
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(needs.build-matrix.outputs.matrix) }}
      max-parallel: 4
      fail-fast: false
    steps:
      - name: Checkout current repository for the Dockerfiles
        uses: actions/checkout@v3

      - name: Lint Dockerfile
        uses: hadolint/hadolint-action@v2.1.0
        with:
          dockerfile: ./Dockerfile
          failure-threshold: error

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to the container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push habana-ai-driver:${{matrix.versions.driver }}-${{ matrix.versions.kernel }}.${{ matrix.versions.arch_tag }}
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ matrix.versions.driver }}-${{ matrix.versions.kernel }}.${{ matrix.versions.arch_tag }}"
          build-args: |
            "ARCH=${{ matrix.versions.arch_tag }}"
            "BASE_DIGEST=${{ matrix.versions.ubi-digest }}"
            "RHEL_VERSION=${{ matrix.versions.rhel }}"
            "KERNEL_VERSION=${{ matrix.versions.kernel }}"
            "HABANA_VERSION=${{ matrix.versions.driver }}"
            "DRIVER_EPOCH=1"
